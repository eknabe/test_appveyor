image:
- Visual Studio 2017
- Ubuntu1804

configuration: Release

platform: x64

before_build:
  - cmd: gitversion /l console /output buildserver
  
  - ps: |
        echo "BUILD_VERSION=`"$env:APPVEYOR_BUILD_VERSION`\n"  | Out-File -Encoding ascii version.txt
        type version.txt

artifacts:
  - path: '/app\b(.exe)?\b/'
  - path: '*.txt'

skip_commits:
  message: /#skip_build/
  files:
    - 'docs/*'
    - '*.txt'

max_jobs: 2

on_success:
  - ps: |
      echo "hello global"
      if ($Env:APPVEYOR_REPO_TAG -eq $true)
      {
          echo "dummy content"  | Out-File -Encoding ascii dummy.txt
      }

for:
  -
    matrix:
      only:
        - image: Ubuntu1804
    init:
      - echo Ubuntu build script
      - sh: >-
          sudo apt-get install -y libgl1-mesa-dev libxrandr-dev libxinerama-dev
          
    build_script:
      - sh: >-
          gcc main.cpp -o app
          
          if [ "$APPVEYOR_REPO_TAG" == 1 ]; 
          then     
              echo "APPVEYOR_REPO_TAG true";
          else
              echo "APPVEYOR_REPO_TAG false"; 
          fi
          
    after_build:
      - sh: >-
          echo "Hello after world linux"

  -
    matrix:
      only:
        - image: Visual Studio 2017
        
    build_script:
      - echo Visual Studio 2017 x64 build script
      - cmd:
          call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
          
          cl main.cpp "/Fe:" app.exe
          
          IF %APPVEYOR_REPO_TAG%==1 (echo "APPVEYOR_REPO_TAG true") ELSE (echo "APPVEYOR_REPO_TAG false")

    after_build:
      - ps: |
          if ($APPVEYOR_REPO_COMMIT_MESSAGE.Contains('*#no_bins*'))
          {
            echo "Skip"
          }
          else
          {
            echo "not Skip"
          }
          
          
      - cmd: 
          echo "Hello after world windows" 
          
          echo.%APPVEYOR_REPO_COMMIT_MESSAGE% | findstr /C:"#no_bins" >nul 2>&1 && echo Skip binary artifacts || echo Create artifacts. >nul


deploy:
  - provider: GitHub
    tag: $(APPVEYOR_REPO_TAG_NAME)
    release: test_appveyor $(GitVersion_MajorMinorPatch) (build $(APPVEYOR_BUILD_NUMBER))
    description: 'Automated release\nBinaries8'
    auth_token:
      secure: wKTE14vggGofMa87GvA3pLpShpKrkoFwaf50nFJsBu9JfTWsfqOE20skdO6Eg74u
    on:
       APPVEYOR_REPO_TAG: true       # deploy on tag push only
